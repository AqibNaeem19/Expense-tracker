{"version":3,"sources":["components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","Helper/GenerateRandomId.js","App.js","index.js"],"names":["ExpenseFilter","props","expenseYearsArray","year","Date","getFullYear","nextYear","unshift","_renderOptionsListDynamically","renderExpenseYearFilter","map","item","index","value","className","selected","onChange","event","onChangeExpenseYear","target","ExpenseDate","month","date","toLocaleString","day","ExpenseItem","purchasedDate","name","price","ExpenseList","renderExpenseList","expenseList","id","_id","expenseItemPrice","expenseItemName","itemPurchaseDate","no_expense","Fragment","length","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","MaximumValue","max","totalMonthExpense","filter","renderChartList","points","expense","ExpensesChart","chartDataPoints","getMonth","Expense","useState","filterYear","setFilterYear","filteredExpenses","toString","selectedYear","ExpenseForm","expenseTitle","setExpenseTitle","expensePrice","setExpensePrice","expenseDate","setExpenseDate","onSubmit","preventDefault","newExpenseData","saveNewExpense","type","placeholder","min","step","NewExpense","addNewExpense","usedIds","generateRandomId","ExpenseId","alphabets","i","floor","random","includes","console","log","push","initialExpenseData","App","expenses","setExpenses","newExpensedData","newExpense","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dea5cebc.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Styles/ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n\r\n  let expenseYearsArray = [2020];\r\n\r\n  // generates the years from 2020 to current year and save it to Array.\r\n  // used to generate dynamically options for select tag.\r\n  const _renderOptionsListDynamically = () => {\r\n    const year = new Date().getFullYear();\r\n    while (year > expenseYearsArray[0]) {\r\n      const nextYear = expenseYearsArray[0] + 1;\r\n      expenseYearsArray.unshift(nextYear);\r\n    }\r\n  }\r\n\r\n  _renderOptionsListDynamically();\r\n\r\n  // sent value to parent and set state to current value.\r\n  const expenseYearDropDownChange = event => {\r\n    props.onChangeExpenseYear(event.target.value);\r\n  };\r\n\r\n  // render options through array of years.\r\n  const renderExpenseYearFilter = expenseYearsArray.map( (item, index) => {\r\n    return (\r\n      <option key={index} value={`${item}`}>{item}</option>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={expenseYearDropDownChange} >\r\n          {renderExpenseYearFilter}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpenseFilter","import React from 'react';\r\nimport '../Styles/ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;","import ExpenseDate from './ExpenseDate';\r\nimport '../Styles/ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n      <div className='expense-item'>\r\n        <ExpenseDate date={props.purchasedDate} />\r\n        <div className='expense-item__description'>\r\n          <h2> {props.name} </h2>\r\n          <div className='expense-item__price'>$ {props.price}</div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpenseList = props => {\r\n\r\n  const renderExpenseList = props.expenseList.map(item => {\r\n    return (\r\n      <ExpenseItem\r\n        key={item._id}\r\n        id={item._id}\r\n        price={item.expenseItemPrice}\r\n        name={item.expenseItemName}\r\n        purchasedDate={item.itemPurchaseDate}\r\n      />\r\n    )\r\n  })\r\n\r\n  const no_expense = <p className='no-expense__paragraph'>No Expense Found</p>\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {renderExpenseList.length === 0 ? no_expense : renderExpenseList}\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ExpenseList;","import React from 'react';\r\nimport '../Styles/ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n  let barFillHeight = '0%';\r\n  if(props.maxValue > 0){\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport '../Styles/Chart.css';\r\n\r\nconst Chart = props => {\r\n\r\n  const dataPointsValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const MaximumValue = Math.max(...dataPointsValue);\r\n\r\n  //Filter months whose expense is greater than 0.\r\n  const totalMonthExpense = props.dataPoints.filter(item => {\r\n    return item.value > 0;\r\n  })\r\n\r\n  // render chart list. [Graph].\r\n  const renderChartList = props.dataPoints.map((points, index) => {\r\n    return (\r\n      <ChartBar key={index}\r\n        value={points.value}\r\n        maxValue={MaximumValue}\r\n        label={points.label}\r\n      />\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className='Chart-component'>\r\n      <div className='chart'>\r\n        {renderChartList}\r\n      </div>\r\n      <div className='total-expenses'>\r\n        {props.expense.length === 0 ? \r\n          <p> No Data </p> : \r\n          totalMonthExpense.map((points, index) => {\r\n            return <p key={index}><span>{points.label}</span> ~ $ {points.value}</p>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n  let chartDataPoints = [\r\n    {label: 'Jan', value: 0},\r\n    {label: 'Feb', value: 0},\r\n    {label: 'Mar', value: 0},\r\n    {label: 'Apr', value: 0},\r\n    {label: 'May', value: 0},\r\n    {label: 'Jun', value: 0},\r\n    {label: 'Jul', value: 0},\r\n    {label: 'Aug', value: 0},\r\n    {label: 'Sep', value: 0},\r\n    {label: 'Oct', value: 0},\r\n    {label: 'Nov', value: 0},\r\n    {label: 'Dec', value: 0}\r\n  ];\r\n\r\n  // Add expense of all months in selected year. \r\n  for (const expense of props.expense){\r\n    const expenseMonth = expense.itemPurchaseDate.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.expenseItemPrice;\r\n  }\r\n\r\n  return (\r\n    <Chart dataPoints={chartDataPoints} expense={props.expense} />\r\n  )\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport '../Styles/Expense.css';\r\n\r\nconst Expense = (props) => {\r\n  const [filterYear, setFilterYear] = useState('2020');\r\n\r\n  // pass func to child and get value from dropdown.\r\n  const expenseYearChangeHandler = selectedYear => {\r\n    setFilterYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.expenseList.filter(expense => {\r\n    return expense.itemPurchaseDate.getFullYear().toString() === filterYear;\r\n  });\r\n  \r\n  return (\r\n    <div className='expense'>\r\n      <ExpenseFilter selected={filterYear} onChangeExpenseYear={expenseYearChangeHandler} />\r\n      <ExpensesChart expense={filteredExpenses} />\r\n      <ExpenseList expenseList={filteredExpenses} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Expense;","import React, { useState } from 'react';\r\nimport '../Styles/ExpenseForm.css';\r\n\r\nconst ExpenseForm = ( props ) => {\r\n  \r\n  // Expense States\r\n  const [expenseTitle, setExpenseTitle] = useState('');\r\n  const [expensePrice, setExpensePrice] = useState('');\r\n  const [expenseDate, setExpenseDate] = useState('');\r\n\r\n  // State Update Handlers\r\n  const expenseTitleHandler = event => {\r\n    setExpenseTitle(event.target.value);\r\n  }\r\n\r\n  const expensePriceHandler = event => {\r\n    setExpensePrice(event.target.value);\r\n  }\r\n\r\n  const expenseDateHandler = event => {\r\n    setExpenseDate(event.target.value);\r\n  }\r\n\r\n  // Submit Form\r\n  const formSubmitHandler = event  => {\r\n    event.preventDefault();\r\n    const newExpenseData = {\r\n      expenseItemName: expenseTitle,\r\n      expenseItemPrice: +expensePrice,\r\n      itemPurchaseDate: new Date(expenseDate)\r\n    };\r\n    // Prop from Parent NewExpense.js\r\n    props.saveNewExpense(newExpenseData);\r\n    // Resetting Form Defaults\r\n    setExpenseTitle('');\r\n    setExpensePrice('');\r\n    setExpenseDate('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className='new-expense__controls'>\r\n\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input type='text' \r\n            name='title' \r\n            value={expenseTitle} \r\n            placeholder='Tissue Box' \r\n            onChange={ expenseTitleHandler } \r\n          />\r\n        </div>\r\n\r\n        <div className='new-expense__control'>\r\n          <label>Price</label>\r\n          <input type='number' \r\n            name='price' \r\n            value={expensePrice} \r\n            min='1' \r\n            step='1.0' \r\n            placeholder='5.0'\r\n            onChange={ expensePriceHandler } \r\n          />\r\n        </div>\r\n\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input type='date' \r\n            name='date' \r\n            value={expenseDate} \r\n            onChange={ expenseDateHandler }  \r\n          />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className='new-expense__actions'>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ExpenseForm;","import React from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport '../Styles/NewExpense.css';\r\n\r\nconst NewExpense = ( props ) => {\r\n  const saveNewExpenseData = ( newExpenseData ) => {\r\n    // prop from Parent App.js \r\n    props.addNewExpense(newExpenseData);\r\n  }\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      <ExpenseForm saveNewExpense={saveNewExpenseData} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewExpense;","// Array holds all the assigned ExpenseIds.\r\nlet usedIds = [];\r\n\r\n// Function to generate and validate the ExpenseId.\r\nfunction generateRandomId(){\r\n\r\n  let ExpenseId = '';\r\n  const alphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z','0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '$', '&', '@', '#', '%'];\r\n\r\n  //selects random characters from alphabets array and concatinates them.\r\n  for(let i = 0; i < 10; i++){\r\n    let selectRandomCharacter = alphabets[Math.floor(Math.random() * alphabets.length ) ];\r\n    ExpenseId = ExpenseId + selectRandomCharacter;\r\n  }\r\n\r\n  // validate wheather theres already existing id or not\r\n  if( usedIds.includes(ExpenseId)){\r\n    console.log(\"Similar Id found to be already existing!!. Creating a new Id.\");\r\n    generateRandomId();\r\n  } else {\r\n    console.log(\"Created a uique Id, pushing it to id record\");\r\n    usedIds.push(ExpenseId);\r\n  }\r\n\r\n  return ExpenseId;\r\n}\r\n\r\nexport {generateRandomId};","import React, { useState } from 'react';\r\nimport Expense from './components/Expenses/Expense';\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\nimport {generateRandomId} from './Helper/GenerateRandomId';\r\n\r\n\r\nconst initialExpenseData = [\r\n  { \r\n    _id: generateRandomId(), \r\n    expenseItemPrice: 67.8, \r\n    expenseItemName: 'Toilet Paper', \r\n    itemPurchaseDate: new Date(2021, 6, 23)\r\n  },\r\n  { \r\n    _id: generateRandomId(), \r\n    expenseItemPrice: 200, \r\n    expenseItemName: 'Skimmed Milk', \r\n    itemPurchaseDate: new Date(2021, 3, 12)\r\n  },\r\n  { \r\n    _id: generateRandomId(), \r\n    expenseItemPrice: 203.99, \r\n    expenseItemName: 'Groceries', \r\n    itemPurchaseDate: new Date(2021, 5, 16)\r\n  },\r\n  { \r\n    _id: generateRandomId(), \r\n    expenseItemPrice: 500, \r\n    expenseItemName: 'Health Insuranse', \r\n    itemPurchaseDate: new Date(2021, 5, 4)\r\n  },\r\n  { \r\n    _id: generateRandomId(), \r\n    expenseItemPrice: 150, \r\n    expenseItemName: 'Jogging Shoes', \r\n    itemPurchaseDate: new Date(2021, 10, 12)\r\n  }\r\n]\r\n\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState(initialExpenseData);\r\n\r\n  // Update List function.\r\n  const addNewExpenseHandler = newExpensedData => {\r\n\r\n    const newExpense = {...newExpensedData,\r\n      _id: generateRandomId()\r\n    };\r\n\r\n    setExpenses((prevState) => {\r\n      return [newExpense, ...prevState];\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NewExpense addNewExpense={addNewExpenseHandler} />\r\n      <Expense expenseList={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}